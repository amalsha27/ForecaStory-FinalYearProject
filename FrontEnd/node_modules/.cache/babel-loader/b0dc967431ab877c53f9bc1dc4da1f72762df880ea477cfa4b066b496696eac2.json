{"ast":null,"code":"var _jsxFileName = \"/Users/amalshar/Desktop/ForecaStory-FinalYearProject/FrontEnd/src/components/PredictForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './PredictForecast.css';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PredictForecast() {\n  _s();\n  const [fileName, setFileName] = useState(null);\n  const [file, setFile] = useState(null);\n  const [downloadUrl] = useState(null);\n  const [predictionsData] = useState(null);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file && file.type !== 'text/csv') {\n      alert('Invalid file type. Please upload a CSV file.');\n      return;\n    }\n    setFile(file);\n    setFileName(file.name);\n  };\n  const handleProcess = async () => {\n    if (!file) {\n      alert('Please upload a file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5050/process', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        responseType: 'blob'\n      });\n      const zipFile = new Blob([response.data], {\n        type: 'application/zip'\n      });\n      const downloadUrl = URL.createObjectURL(zipFile);\n      saveAs(zipFile, 'output.zip');\n    } catch (error) {\n      console.error('Error processing file:', error);\n      alert('An error occurred while processing the file.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"predict-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Future Demand Forecast Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This will allow you to predict future demand based on historical data. Upload a CSV file with your data, and it will process it and provide a forecast.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-output-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Upload Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"file-upload-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-upload-button\",\n            children: \"Choose File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected file: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleProcess,\n            children: \"Predict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), predictionsData && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Predictions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: predictionsData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: downloadUrl && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.open(downloadUrl, '_blank'),\n            children: \"Download Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(PredictForecast, \"RTUzoWmBsVD0S/CKly5jYhlB1g4=\");\n_c = PredictForecast;\nexport default PredictForecast;\nvar _c;\n$RefreshReg$(_c, \"PredictForecast\");","map":{"version":3,"names":["React","useState","axios","saveAs","jsxDEV","_jsxDEV","PredictForecast","_s","fileName","setFileName","file","setFile","downloadUrl","predictionsData","handleFileUpload","event","target","files","type","alert","name","handleProcess","formData","FormData","append","response","post","headers","responseType","zipFile","Blob","data","URL","createObjectURL","error","console","className","children","_jsxFileName","lineNumber","columnNumber","onChange","onClick","window","open","_c","$RefreshReg$"],"sources":["/Users/amalshar/Desktop/ForecaStory-FinalYearProject/FrontEnd/src/components/PredictForecast.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './PredictForecast.css';\nimport { saveAs } from 'file-saver';\n\nfunction PredictForecast() {\n  const [fileName, setFileName] = useState(null);\n  const [file, setFile] = useState(null);\n  const [downloadUrl] = useState(null);\n  const [predictionsData] = useState(null);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type !== 'text/csv') {\n      alert('Invalid file type. Please upload a CSV file.');\n      return;\n    }\n    setFile(file);\n    setFileName(file.name); \n  };  \n\n  const handleProcess = async () => {\n    if (!file) {\n      alert('Please upload a file first.');\n      return;\n    }\n  \n    const formData = new FormData();\n    formData.append('file', file);\n  \n    try {\n      const response = await axios.post('http://localhost:5050/process', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        responseType: 'blob'\n      });\n  \n      const zipFile = new Blob([response.data], { type: 'application/zip' });\n      const downloadUrl = URL.createObjectURL(zipFile);\n  \n      saveAs(zipFile, 'output.zip');\n    } catch (error) {\n      console.error('Error processing file:', error);\n      alert('An error occurred while processing the file.');\n    }\n  };\n\n  return (\n    <div className=\"predict-forecast\">\n      <h1>Future Demand Forecast Prediction</h1>\n      <p>This will allow you to predict future demand based on historical data. Upload a CSV file with your data, and it will process it and provide a forecast.</p>\n      <div className=\"input-output-container\">\n        <div className=\"input-section\">\n          <h1>Upload Data</h1>\n          <label className=\"file-upload-container\">\n            <input type=\"file\" onChange={handleFileUpload} />\n            <span className=\"file-upload-button\">Choose File</span>\n          </label>\n          {fileName && <p>Selected file: {fileName}</p>}\n          <div className=\"button-container\">\n            <button onClick={handleProcess}>Predict</button>\n          </div>\n        </div>\n        <div className=\"output-section\">\n          <h1>Output</h1>\n          {predictionsData && (\n            <div>\n              <h3>Predictions:</h3>\n              <pre>{predictionsData}</pre>\n            </div>\n          )}\n          <div className=\"button-container\">\n          {downloadUrl && <button onClick={() => window.open(downloadUrl, '_blank')}>Download Output</button>}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PredictForecast;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAC9B,SAASC,MAAM,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACY,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAML,IAAI,GAAGK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIP,IAAI,IAAIA,IAAI,CAACQ,IAAI,KAAK,UAAU,EAAE;MACpCC,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACF;IACAR,OAAO,CAACD,IAAI,CAAC;IACbD,WAAW,CAACC,IAAI,CAACU,IAAI,CAAC;EACxB,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACX,IAAI,EAAE;MACTS,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IAEA,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEd,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,EAAE;QAC3EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,YAAY,EAAE;MAChB,CAAC,CAAC;MAEF,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAAC,CAACL,QAAQ,CAACM,IAAI,CAAC,EAAE;QAAEb,IAAI,EAAE;MAAkB,CAAC,CAAC;MACtE,MAAMN,WAAW,GAAGoB,GAAG,CAACC,eAAe,CAACJ,OAAO,CAAC;MAEhD1B,MAAM,CAAC0B,OAAO,EAAE,YAAY,CAAC;IAC/B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9Cf,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,oBACEd,OAAA;IAAK+B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BhC,OAAA;MAAAgC,QAAA,EAAI;IAAiC;MAAA7B,QAAA,EAAA8B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CnC,OAAA;MAAAgC,QAAA,EAAG;IAAuJ;MAAA7B,QAAA,EAAA8B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9JnC,OAAA;MAAK+B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrChC,OAAA;QAAK+B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhC,OAAA;UAAAgC,QAAA,EAAI;QAAW;UAAA7B,QAAA,EAAA8B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBnC,OAAA;UAAO+B,SAAS,EAAC,uBAAuB;UAAAC,QAAA,gBACtChC,OAAA;YAAOa,IAAI,EAAC,MAAM;YAACuB,QAAQ,EAAE3B;UAAiB;YAAAN,QAAA,EAAA8B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjDnC,OAAA;YAAM+B,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAC;UAAW;YAAA7B,QAAA,EAAA8B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAhC,QAAA,EAAA8B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,EACPhC,QAAQ,iBAAIH,OAAA;UAAAgC,QAAA,GAAG,iBAAe,EAAC7B,QAAQ;QAAA;UAAAA,QAAA,EAAA8B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7CnC,OAAA;UAAK+B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/BhC,OAAA;YAAQqC,OAAO,EAAErB,aAAc;YAAAgB,QAAA,EAAC;UAAO;YAAA7B,QAAA,EAAA8B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAhC,QAAA,EAAA8B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAhC,QAAA,EAAA8B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNnC,OAAA;QAAK+B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BhC,OAAA;UAAAgC,QAAA,EAAI;QAAM;UAAA7B,QAAA,EAAA8B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACd3B,eAAe,iBACdR,OAAA;UAAAgC,QAAA,gBACEhC,OAAA;YAAAgC,QAAA,EAAI;UAAY;YAAA7B,QAAA,EAAA8B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBnC,OAAA;YAAAgC,QAAA,EAAMxB;UAAe;YAAAL,QAAA,EAAA8B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAhC,QAAA,EAAA8B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CACN,eACDnC,OAAA;UAAK+B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAChCzB,WAAW,iBAAIP,OAAA;YAAQqC,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,IAAI,CAAChC,WAAW,EAAE,QAAQ,CAAE;YAAAyB,QAAA,EAAC;UAAe;YAAA7B,QAAA,EAAA8B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAhC,QAAA,EAAA8B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9F,CAAC;MAAA;QAAAhC,QAAA,EAAA8B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAhC,QAAA,EAAA8B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAhC,QAAA,EAAA8B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CA1EQD,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AA4ExB,eAAeA,eAAe;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}